"use strict";(self.webpackChunksa_docs=self.webpackChunksa_docs||[]).push([[8380],{3905:function(e,t,l){l.d(t,{Zo:function(){return u},kt:function(){return d}});var a=l(7294);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function n(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?n(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):n(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function s(e,t){if(null==e)return{};var l,a,r=function(e,t){if(null==e)return{};var l,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)l=n[a],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)l=n[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},u=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var l=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=i(l),d=r,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||n;return l?a.createElement(h,o(o({ref:t},u),{},{components:l})):a.createElement(h,o({ref:t},u))}));function d(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=l.length,o=new Array(n);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var i=2;i<n;i++)o[i]=l[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,l)}m.displayName="MDXCreateElement"},899:function(e,t,l){l.r(t),l.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return c}});var a=l(7462),r=l(3366),n=(l(7294),l(3905)),o=["components"],s={},p="API Reference",i={unversionedId:"modules/BCC/reference",id:"modules/BCC/reference",title:"API Reference",description:"---",source:"@site/docs/modules/BCC/reference.md",sourceDirName:"modules/BCC",slug:"/modules/BCC/reference",permalink:"/docs/modules/BCC/reference",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/modules/BCC/reference.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/modules/BCC/intro"},next:{title:"Routes",permalink:"/docs/modules/BCC/routes"}},u={},c=[{value:"sidebar_position: 1",id:"sidebar_position-1",level:2},{value:"BccToolController",id:"bcctoolcontroller",level:2},{value:"Table of Contents",id:"table-of-contents",level:3},{value:"Methods",id:"methods",level:3},{value:"archiveBcc()",id:"archivebcc",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Return values",id:"return-values",level:5},{value:"archiveBccMapping()",id:"archivebccmapping",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Return values",id:"return-values-1",level:5},{value:"bccTool()",id:"bcctool",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"Return values",id:"return-values-2",level:5},{value:"checkBccMapping()",id:"checkbccmapping",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"Return values",id:"return-values-3",level:5},{value:"checkTbodyOccurrence()",id:"checktbodyoccurrence",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"Return values",id:"return-values-4",level:5},{value:"cleanHtml()",id:"cleanhtml",level:4},{value:"Parameters",id:"parameters-5",level:5},{value:"Return values",id:"return-values-5",level:5},{value:"cleanPath()",id:"cleanpath",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"Return values",id:"return-values-6",level:5},{value:"getAddress()",id:"getaddress",level:4},{value:"Parameters",id:"parameters-7",level:5},{value:"Return values",id:"return-values-7",level:5},{value:"getDomChilds()",id:"getdomchilds",level:4},{value:"Parameters",id:"parameters-8",level:5},{value:"Return values",id:"return-values-8",level:5},{value:"getDomNodeValue()",id:"getdomnodevalue",level:4},{value:"Parameters",id:"parameters-9",level:5},{value:"Return values",id:"return-values-9",level:5},{value:"getMappingView()",id:"getmappingview",level:4},{value:"Parameters",id:"parameters-10",level:5},{value:"Tags",id:"tags",level:5},{value:"Return values",id:"return-values-10",level:5},{value:"getNameFromHeader()",id:"getnamefromheader",level:4},{value:"Parameters",id:"parameters-11",level:5},{value:"Return values",id:"return-values-11",level:5},{value:"insertOrUpdateFeedback()",id:"insertorupdatefeedback",level:4},{value:"Parameters",id:"parameters-12",level:5},{value:"Tags",id:"tags-1",level:5},{value:"Return values",id:"return-values-12",level:5},{value:"parseAdditionalProducts()",id:"parseadditionalproducts",level:4},{value:"Parameters",id:"parameters-13",level:5},{value:"Return values",id:"return-values-13",level:5},{value:"parseBccEmail()",id:"parsebccemail",level:4},{value:"Parameters",id:"parameters-14",level:5},{value:"Tags",id:"tags-2",level:5},{value:"Return values",id:"return-values-14",level:5},{value:"parseBccEmailBkp()",id:"parsebccemailbkp",level:4},{value:"Parameters",id:"parameters-15",level:5},{value:"Return values",id:"return-values-15",level:5},{value:"parseBccEmails()",id:"parsebccemails",level:4},{value:"Parameters",id:"parameters-16",level:5},{value:"Return values",id:"return-values-16",level:5},{value:"parseEmail()",id:"parseemail",level:4},{value:"Parameters",id:"parameters-17",level:5},{value:"Tags",id:"tags-3",level:5},{value:"Return values",id:"return-values-17",level:5},{value:"processUnmappedRequests()",id:"processunmappedrequests",level:4},{value:"Parameters",id:"parameters-18",level:5},{value:"Return values",id:"return-values-18",level:5},{value:"removeScriptsUsingDom()",id:"removescriptsusingdom",level:4},{value:"Parameters",id:"parameters-19",level:5},{value:"Return values",id:"return-values-19",level:5},{value:"saveEmailMapping()",id:"saveemailmapping",level:4},{value:"Parameters",id:"parameters-20",level:5},{value:"Tags",id:"tags-4",level:5},{value:"Return values",id:"return-values-20",level:5},{value:"stringBetweenTwoStrings()",id:"stringbetweentwostrings",level:4},{value:"Parameters",id:"parameters-21",level:5},{value:"Return values",id:"return-values-21",level:5},{value:"validateEmailFile()",id:"validateemailfile",level:4},{value:"Parameters",id:"parameters-22",level:5},{value:"Return values",id:"return-values-22",level:5}],m={toc:c};function d(e){var t=e.components,l=(0,r.Z)(e,o);return(0,n.kt)("wrapper",(0,a.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"api-reference"},"API Reference"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"sidebar_position-1"},"sidebar_position: 1"),(0,n.kt)("h2",{id:"bcctoolcontroller"},"BccToolController"),(0,n.kt)("p",null," extends Controller"),(0,n.kt)("p",null," in package"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"packages/Application.html"},"Application"))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 22"),(0,n.kt)("h3",{id:"table-of-contents"},"Table of Contents"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_archiveBcc"},"archiveBcc()")),(0,n.kt)("p",null," \xa0: JsonResponse "),(0,n.kt)("p",null,"This method used to archive the unmapped requests"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_archiveBccMapping"},"archiveBccMapping()")),(0,n.kt)("p",null," \xa0: JsonResponse "),(0,n.kt)("p",null,"This method used to archive the active campaigns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_bccTool"},"bccTool()")),(0,n.kt)("p",null," \xa0: array<string|int, mixed>|Factory|RedirectResponse|View|mixed "),(0,n.kt)("p",null,"This method handles the main view for bcc tool\nIt contains 2 partials (Active campaigns and unmapped requests)"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_checkBccMapping"},"checkBccMapping()")),(0,n.kt)("p",null," \xa0: bool "),(0,n.kt)("p",null,"This methods checks if any active campaign exists for incoming email"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_checkTbodyOccurrence"},"checkTbodyOccurrence()")),(0,n.kt)("p",null," \xa0: bool "),(0,n.kt)("p",null,"verify in html if tbody exists in html or not"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_cleanHtml"},"cleanHtml()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_cleanPath"},"cleanPath()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,"this methods clean the xpath and check for tbody too\nif tbody exists in html then tbody tag is added to xpath otherwise replaced with //tr"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_getAddress"},"getAddress()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_getDomChilds"},"getDomChilds()")),(0,n.kt)("p",null," \xa0: array<string|int, mixed> "),(0,n.kt)("p",null,"This method is used to get the products array from given html"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_getDomNodeValue"},"getDomNodeValue()")),(0,n.kt)("p",null," \xa0: bool "),(0,n.kt)("p",null,"This function is used to get the Node value for given xpath\ne.g (/html/body/center/div","[2]","/table","[2]","/tbody/tr","[2]","/td/table/tbody/tr","[1]","/td/p","[2]","/strong/text()","[1]",")\nabove xpath will be given to get the order id from given html string"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_getMappingView"},"getMappingView()")),(0,n.kt)("p",null," \xa0: JsonResponse|RedirectResponse "),(0,n.kt)("p",null,"This method is used to get the mapping view for mapping emails\nThis method handles 3 views (editing the unmapped requests, editing active campaigns, uploading the eml file)"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_getNameFromHeader"},"getNameFromHeader()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_insertOrUpdateFeedback"},"insertOrUpdateFeedback()")),(0,n.kt)("p",null," \xa0: int|mixed "),(0,n.kt)("p",null,"This methods stores the data parsed from emails on basis of mapping"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_parseAdditionalProducts"},"parseAdditionalProducts()")),(0,n.kt)("p",null," \xa0: JsonResponse "),(0,n.kt)("p",null,"This method is used to parse the additional products from emails when product name is mapped in email\nit gets all the products from emails when xpath for parents table and product is given"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_parseBccEmail"},"parseBccEmail()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,"This method is used to parse the emails (it can be called from browser","[parseEmail]","\nand from cron","[BccToolEmailParser]",")"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_parseBccEmailBkp"},"parseBccEmailBkp()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_parseBccEmails"},"parseBccEmails()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,"This method is used by sendgrid webhook that posts the email data\nIt stores the incoming data to BccEmails table"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_parseEmail"},"parseEmail()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,"This method is used to check if mapping is working fine or not (in browser)\ne.g ",(0,n.kt)("a",{parentName:"p",href:"http://local.sa/account/admin/emails/parse-bcc-email?bccid=880424&mappingid=33"},"http://local.sa/account/admin/emails/parse-bcc-email?bccid=880424&mappingid=33")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_processUnmappedRequests"},"processUnmappedRequests()")),(0,n.kt)("p",null," \xa0: JsonResponse "),(0,n.kt)("p",null,"This method handles the job queue on basis of mapping for recent saved active campaign"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_removeScriptsUsingDom"},"removeScriptsUsingDom()")),(0,n.kt)("p",null," \xa0: mixed "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_saveEmailMapping"},"saveEmailMapping()")),(0,n.kt)("p",null," \xa0: false|string "),(0,n.kt)("p",null,"This method is used to save the mapping from front end\nimportant param is mapping (It contains all xpaths for all data that needs to be parsed)"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_stringBetweenTwoStrings"},"stringBetweenTwoStrings()")),(0,n.kt)("p",null," \xa0: bool|string "),(0,n.kt)("p",null,"This function is used to return the string between two strings\nbased on conditions if starting & ending strings are empty or not"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"classes/App-Http-Controllers-BccToolController.html#method_validateEmailFile"},"validateEmailFile()")),(0,n.kt)("p",null," \xa0: JsonResponse "),(0,n.kt)("p",null,"This method is used to validate the input eml format file that is uploaded from front end"),(0,n.kt)("h3",{id:"methods"},"Methods"),(0,n.kt)("h4",{id:"archivebcc"},"archiveBcc()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 586"),(0,n.kt)("p",null,"This method used to archive the unmapped requests"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nstatic archiveBcc(Request\xa0$request) : JsonResponse")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values"},"Return values"),(0,n.kt)("p",null,"JsonResponse\n\u2014"),(0,n.kt)("h4",{id:"archivebccmapping"},"archiveBccMapping()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 603"),(0,n.kt)("p",null,"This method used to archive the active campaigns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nstatic archiveBccMapping(Request\xa0$request) : JsonResponse")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values-1"},"Return values"),(0,n.kt)("p",null,"JsonResponse\n\u2014"),(0,n.kt)("h4",{id:"bcctool"},"bccTool()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 31"),(0,n.kt)("p",null,"This method handles the main view for bcc tool\nIt contains 2 partials (Active campaigns and unmapped requests)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nbccTool(Request\xa0$request) : array<string|int, mixed>|Factory|RedirectResponse|View|mixed")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values-2"},"Return values"),(0,n.kt)("p",null,"array<string|int, mixed>|Factory|RedirectResponse|View|mixed\n\u2014"),(0,n.kt)("h4",{id:"checkbccmapping"},"checkBccMapping()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 678"),(0,n.kt)("p",null,"This methods checks if any active campaign exists for incoming email"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ncheckBccMapping(\xa0$emailData, \xa0$mapping) : bool")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("p",null,"$emailData : "),(0,n.kt)("p",null,"$mapping : "),(0,n.kt)("h5",{id:"return-values-3"},"Return values"),(0,n.kt)("p",null,"bool\n\u2014"),(0,n.kt)("h4",{id:"checktbodyoccurrence"},"checkTbodyOccurrence()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 457"),(0,n.kt)("p",null,"verify in html if tbody exists in html or not"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ncheckTbodyOccurrence(\xa0$html) : bool")),(0,n.kt)("h5",{id:"parameters-4"},"Parameters"),(0,n.kt)("p",null,"$html : "),(0,n.kt)("h5",{id:"return-values-4"},"Return values"),(0,n.kt)("p",null,"bool\n\u2014"),(0,n.kt)("h4",{id:"cleanhtml"},"cleanHtml()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 499"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ncleanHtml(mixed\xa0$html) : mixed")),(0,n.kt)("h5",{id:"parameters-5"},"Parameters"),(0,n.kt)("p",null,"$html : mixed"),(0,n.kt)("h5",{id:"return-values-5"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"cleanpath"},"cleanPath()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 443"),(0,n.kt)("p",null,"this methods clean the xpath and check for tbody too\nif tbody exists in html then tbody tag is added to xpath otherwise replaced with //tr"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ncleanPath(\xa0$path[, null\xa0$html = null ]) : mixed")),(0,n.kt)("h5",{id:"parameters-6"},"Parameters"),(0,n.kt)("p",null,"$path : "),(0,n.kt)("p",null,"$html : null\n= null "),(0,n.kt)("h5",{id:"return-values-6"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"getaddress"},"getAddress()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 118"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ngetAddress(mixed\xa0$parser, mixed\xa0$param) : mixed")),(0,n.kt)("h5",{id:"parameters-7"},"Parameters"),(0,n.kt)("p",null,"$parser : mixed"),(0,n.kt)("p",null,"$param : mixed"),(0,n.kt)("h5",{id:"return-values-7"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"getdomchilds"},"getDomChilds()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 379"),(0,n.kt)("p",null,"This method is used to get the products array from given html"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ngetDomChilds(\xa0$productMasterPath, \xa0$html, \xa0$secondryPath) : array<string|int, mixed>")),(0,n.kt)("h5",{id:"parameters-8"},"Parameters"),(0,n.kt)("p",null,"$productMasterPath : "),(0,n.kt)("p",null,"(xpath for the parent table which contains all the products)"),(0,n.kt)("p",null,"$html : "),(0,n.kt)("p",null,"(html string which will be used to parse the data)"),(0,n.kt)("p",null,"$secondryPath : "),(0,n.kt)("p",null,"(xpath for specific product name or id to parse product name from given html)"),(0,n.kt)("h5",{id:"return-values-8"},"Return values"),(0,n.kt)("p",null,"array<string|int, mixed>\n\u2014\n(product array that will contain the value and xpath of those products)"),(0,n.kt)("h4",{id:"getdomnodevalue"},"getDomNodeValue()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 356"),(0,n.kt)("p",null,"This function is used to get the Node value for given xpath\ne.g (/html/body/center/div","[2]","/table","[2]","/tbody/tr","[2]","/td/table/tbody/tr","[1]","/td/p","[2]","/strong/text()","[1]",")\nabove xpath will be given to get the order id from given html string"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ngetDomNodeValue(\xa0$path, \xa0$html) : bool")),(0,n.kt)("h5",{id:"parameters-9"},"Parameters"),(0,n.kt)("p",null,"$path : "),(0,n.kt)("p",null,"$html : "),(0,n.kt)("h5",{id:"return-values-9"},"Return values"),(0,n.kt)("p",null,"bool\n\u2014\n| node value"),(0,n.kt)("h4",{id:"getmappingview"},"getMappingView()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 83"),(0,n.kt)("p",null,"This method is used to get the mapping view for mapping emails\nThis method handles 3 views (editing the unmapped requests, editing active campaigns, uploading the eml file)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ngetMappingView(Request\xa0$request) : JsonResponse|RedirectResponse")),(0,n.kt)("h5",{id:"parameters-10"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"tags"},"Tags"),(0,n.kt)("p",null,"throws"),(0,n.kt)("p",null,"Throwable"),(0,n.kt)("h5",{id:"return-values-10"},"Return values"),(0,n.kt)("p",null,"JsonResponse|RedirectResponse\n\u2014"),(0,n.kt)("h4",{id:"getnamefromheader"},"getNameFromHeader()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 245"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\ngetNameFromHeader(mixed\xa0$path) : mixed")),(0,n.kt)("h5",{id:"parameters-11"},"Parameters"),(0,n.kt)("p",null,"$path : mixed"),(0,n.kt)("h5",{id:"return-values-11"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"insertorupdatefeedback"},"insertOrUpdateFeedback()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 557"),(0,n.kt)("p",null,"This methods stores the data parsed from emails on basis of mapping"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nstatic insertOrUpdateFeedback(\xa0$customerName, \xa0$emailTo, \xa0$orderId, \xa0$OrderDate, \xa0$siteObject, \xa0$mappings) : int|mixed")),(0,n.kt)("h5",{id:"parameters-12"},"Parameters"),(0,n.kt)("p",null,"$customerName : "),(0,n.kt)("p",null,"$emailTo : "),(0,n.kt)("p",null,"$orderId : "),(0,n.kt)("p",null,"$OrderDate : "),(0,n.kt)("p",null,"$siteObject : "),(0,n.kt)("p",null,"$mappings : "),(0,n.kt)("h5",{id:"tags-1"},"Tags"),(0,n.kt)("p",null,"throws"),(0,n.kt)("p",null,"Exception"),(0,n.kt)("h5",{id:"return-values-12"},"Return values"),(0,n.kt)("p",null,"int|mixed\n\u2014"),(0,n.kt)("h4",{id:"parseadditionalproducts"},"parseAdditionalProducts()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 621"),(0,n.kt)("p",null,"This method is used to parse the additional products from emails when product name is mapped in email\nit gets all the products from emails when xpath for parents table and product is given"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nparseAdditionalProducts(Request\xa0$request) : JsonResponse")),(0,n.kt)("h5",{id:"parameters-13"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values-13"},"Return values"),(0,n.kt)("p",null,"JsonResponse\n\u2014"),(0,n.kt)("h4",{id:"parsebccemail"},"parseBccEmail()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 264"),(0,n.kt)("p",null,"This method is used to parse the emails (it can be called from browser","[parseEmail]","\nand from cron","[BccToolEmailParser]",")"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nparseBccEmail(\xa0$emailData, \xa0$mappings) : mixed")),(0,n.kt)("h5",{id:"parameters-14"},"Parameters"),(0,n.kt)("p",null,"$emailData : "),(0,n.kt)("p",null,"$mappings : "),(0,n.kt)("h5",{id:"tags-2"},"Tags"),(0,n.kt)("p",null,"throws"),(0,n.kt)("p",null,"Exception"),(0,n.kt)("h5",{id:"return-values-14"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"parsebccemailbkp"},"parseBccEmailBkp()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 325"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nparseBccEmailBkp(mixed\xa0$emailData, mixed\xa0$mapping) : mixed")),(0,n.kt)("h5",{id:"parameters-15"},"Parameters"),(0,n.kt)("p",null,"$emailData : mixed"),(0,n.kt)("p",null,"$mapping : mixed"),(0,n.kt)("h5",{id:"return-values-15"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"parsebccemails"},"parseBccEmails()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 643"),(0,n.kt)("p",null,"This method is used by sendgrid webhook that posts the email data\nIt stores the incoming data to BccEmails table"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nparseBccEmails(Request\xa0$request) : mixed")),(0,n.kt)("h5",{id:"parameters-16"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values-16"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"parseemail"},"parseEmail()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 228"),(0,n.kt)("p",null,"This method is used to check if mapping is working fine or not (in browser)\ne.g ",(0,n.kt)("a",{parentName:"p",href:"http://local.sa/account/admin/emails/parse-bcc-email?bccid=880424&mappingid=33"},"http://local.sa/account/admin/emails/parse-bcc-email?bccid=880424&mappingid=33")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nparseEmail(Request\xa0$request) : mixed")),(0,n.kt)("h5",{id:"parameters-17"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"tags-3"},"Tags"),(0,n.kt)("p",null,"throws"),(0,n.kt)("p",null,"Exception"),(0,n.kt)("h5",{id:"return-values-17"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"processunmappedrequests"},"processUnmappedRequests()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 491"),(0,n.kt)("p",null,"This method handles the job queue on basis of mapping for recent saved active campaign"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nprocessUnmappedRequests(Request\xa0$request) : JsonResponse")),(0,n.kt)("h5",{id:"parameters-18"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values-18"},"Return values"),(0,n.kt)("p",null,"JsonResponse\n\u2014"),(0,n.kt)("h4",{id:"removescriptsusingdom"},"removeScriptsUsingDom()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 467"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nremoveScriptsUsingDom(mixed\xa0$html) : mixed")),(0,n.kt)("h5",{id:"parameters-19"},"Parameters"),(0,n.kt)("p",null,"$html : mixed"),(0,n.kt)("h5",{id:"return-values-19"},"Return values"),(0,n.kt)("p",null,"mixed\n\u2014"),(0,n.kt)("h4",{id:"saveemailmapping"},"saveEmailMapping()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 163"),(0,n.kt)("p",null,"This method is used to save the mapping from front end\nimportant param is mapping (It contains all xpaths for all data that needs to be parsed)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nsaveEmailMapping(Request\xa0$request) : false|string")),(0,n.kt)("h5",{id:"parameters-20"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"tags-4"},"Tags"),(0,n.kt)("p",null,"throws"),(0,n.kt)("p",null,"Exception"),(0,n.kt)("h5",{id:"return-values-20"},"Return values"),(0,n.kt)("p",null,"false|string\n\u2014"),(0,n.kt)("h4",{id:"stringbetweentwostrings"},"stringBetweenTwoStrings()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 527"),(0,n.kt)("p",null,"This function is used to return the string between two strings\nbased on conditions if starting & ending strings are empty or not"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nstringBetweenTwoStrings(\xa0$str, \xa0$starting\\_word, \xa0$ending\\_word) : bool|string")),(0,n.kt)("h5",{id:"parameters-21"},"Parameters"),(0,n.kt)("p",null,"$str : "),(0,n.kt)("p",null,"$starting","_","word : "),(0,n.kt)("p",null,"$ending","_","word : "),(0,n.kt)("h5",{id:"return-values-21"},"Return values"),(0,n.kt)("p",null,"bool|string\n\u2014"),(0,n.kt)("h4",{id:"validateemailfile"},"validateEmailFile()"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"files/bcctoolcontroller.html"},"BccToolController.php")," : 132"),(0,n.kt)("p",null,"This method is used to validate the input eml format file that is uploaded from front end"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"public\nvalidateEmailFile(Request\xa0$request) : JsonResponse")),(0,n.kt)("h5",{id:"parameters-22"},"Parameters"),(0,n.kt)("p",null,"$request : Request"),(0,n.kt)("h5",{id:"return-values-22"},"Return values"),(0,n.kt)("p",null,"JsonResponse\n\u2014"))}d.isMDXComponent=!0}}]);